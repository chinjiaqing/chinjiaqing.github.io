import{_ as n,c as t,o as e,j as i,a2 as l,a as h,t as p}from"./chunks/framework.CHomSxuB.js";const k="/seq/Snipaste_2025-04-27_16-26-50.png",r="/seq/Snipaste_2025-04-27_16-31-48.png",E="/seq/Snipaste_2025-04-27_16-37-56.png",d="/seq/Snipaste_2025-04-27_16-44-05.png",o="/seq/Snipaste_2025-04-27_16-45-59.png",f=JSON.parse('{"title":"基于SEQ的日志系统","description":"基于SEQ的日志系统","frontmatter":{"title":"基于SEQ的日志系统","description":"基于SEQ的日志系统","editLink":false},"headers":[],"relativePath":"项目总结/基础建设/基于SEQ的日志系统.md","filePath":"项目总结/基础建设/基于SEQ的日志系统.md"}'),g={name:"项目总结/基础建设/基于SEQ的日志系统.md"},c={id:"frontmatter-title",tabindex:"-1"};function y(a,s,_,F,m,S){return e(),t("div",null,[i("h1",c,[h(p(a.$frontmatter.title)+" ",1),s[0]||(s[0]=i("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),s[1]||(s[1]=l('<p>Seq 官方网站：<a href="https://datalust.co/seq" target="_blank" rel="noreferrer">https://datalust.co/seq</a></p><h2 id="下载安装" tabindex="-1">下载安装 <a class="header-anchor" href="#下载安装" aria-label="Permalink to &quot;下载安装&quot;">​</a></h2><p>按照官网教程即可，略过。</p><h2 id="工作区间-workspace" tabindex="-1">工作区间 Workspace <a class="header-anchor" href="#工作区间-workspace" aria-label="Permalink to &quot;工作区间 Workspace&quot;">​</a></h2><p>Seq 的免费版仅支持一个用户，目前看来<code>workspace</code>似乎没啥实际用处。</p><p><img src="'+k+'" alt="/seq/Snipaste_2025-04-27_16-26-50.png"></p><h2 id="标志-signals" tabindex="-1">标志 Signals <a class="header-anchor" href="#标志-signals" aria-label="Permalink to &quot;标志 Signals&quot;">​</a></h2><p>可以理解为自定义的快捷查询方式。</p><p><img src="'+r+'" alt="/seq/Snipaste_2025-04-27_16-31-48.png"></p><h2 id="结合-api-keys-和-signals-实现日志分类" tabindex="-1">结合 API-KEYS 和 Signals 实现日志分类 <a class="header-anchor" href="#结合-api-keys-和-signals-实现日志分类" aria-label="Permalink to &quot;结合 API-KEYS 和 Signals 实现日志分类&quot;">​</a></h2><p>可以理解为一个<code>API-Key</code>对应一个应用，如果我们有多个应用使用同一个日志系统，那么可能需要对应多个不同<code>API-KEY</code>。</p><h3 id="api-key-配置" tabindex="-1">API-KEY 配置 <a class="header-anchor" href="#api-key-配置" aria-label="Permalink to &quot;API-KEY 配置&quot;">​</a></h3><p>其中，自定义属性很关键，用来后面自定义<code>Signal</code>实现快速分类查询。 <em>(当然，你也可以在你的日志代码中来定义这个属性)</em></p><p><img src="'+E+'" alt="/seq/Snipaste_2025-04-27_16-37-56.png"></p><h3 id="signal-实现应用分类" tabindex="-1">Signal 实现应用分类 <a class="header-anchor" href="#signal-实现应用分类" aria-label="Permalink to &quot;Signal 实现应用分类&quot;">​</a></h3><p>新增一个<code>Signal</code>，点击下拉箭头以<code>JSON</code>模式编辑，参考如下：</p><p><img src="'+d+'" alt="/seq/Snipaste_2025-04-27_16-44-05.png"></p><h3 id="signal-扩展" tabindex="-1">Signal 扩展 <a class="header-anchor" href="#signal-扩展" aria-label="Permalink to &quot;Signal 扩展&quot;">​</a></h3><p>按上面的思路，假设每个应用，有不同的业务模块，同样可以为每个模块注入单独的日志属性，如用户模块：<code>__LOG_NAME=&#39;user&#39;</code>，最后再归纳一下如下：</p><p><img src="'+o+`" alt="/seq/Snipaste_2025-04-27_16-45-59.png"></p><h2 id="winston-中使用-seq" tabindex="-1">Winston 中使用 Seq <a class="header-anchor" href="#winston-中使用-seq" aria-label="Permalink to &quot;Winston 中使用 Seq&quot;">​</a></h2><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @datalust/winston-seq</span></span></code></pre></div><h3 id="添加-transport" tabindex="-1">添加 Transport <a class="header-anchor" href="#添加-transport" aria-label="Permalink to &quot;添加 Transport&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SeqTransport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        serverUrl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.configService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SEQ_HOST&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        apiKey: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.configService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SEQ_SECRET&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        onError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`SeqTransport Error\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        format: format.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">combine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        format.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            format: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        format.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Logform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransformableInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // return printfMessagePayload(info); 自定义格式化消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        handleExceptions: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        handleRejections: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }),</span></span></code></pre></div>`,25))])}const q=n(g,[["render",y]]);export{f as __pageData,q as default};
